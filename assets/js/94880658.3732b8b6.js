"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[138],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},f="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=p(r),u=a,d=f["".concat(c,".").concat(u)]||f[u]||m[u]||o;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[f]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4462:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"<fstream>"},i="<fstream>",s={unversionedId:"io/fstream/fstream",id:"version-cpp-14/io/fstream/fstream",title:"<fstream>",description:"Writing to a file in C++ is hard if you don't know what you are doing.",source:"@site/versioned_docs/version-cpp-14/io/fstream/fstream.md",sourceDirName:"io/fstream",slug:"/io/fstream/",permalink:"/docs/cpp-14/io/fstream/",draft:!1,editUrl:"https://github.com/cppdocs/cppdocs.github.io/tree/main/versioned_docs/version-cpp-14/io/fstream/fstream.md",tags:[],version:"cpp-14",frontMatter:{title:"<fstream>"},sidebar:"tutorialSidebar",previous:{title:"Input/Output",permalink:"/docs/cpp-14/io/"},next:{title:"class basic_fstream",permalink:"/docs/cpp-14/io/fstream/class_basic_fstream"}},c={},p=[],l={toc:p};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fstream"},"<fstream",">"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace std {\nclass basic_fstream;\n}\n")),(0,a.kt)("p",null,"Writing to a file in C++ is hard if you don't know what you are doing.\nIn it's most basic form you create an fstream object, then push to that object like you would with std::cout, like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <fstream>\n\nint main() {\n  std::fstream outputFile("FILE_NAME");\n\n  outputFile << "Hello World!\\n";\n}\n')),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"fstream cannot create a file if it doesn't exist. Be sure that the file exists when you open it, or check if a file is open (",(0,a.kt)("a",{parentName:"p",href:"class_basic_fstream#is_open"},"is_open()"),").")),(0,a.kt)("p",null,"If you would like to understand more the first step is to understand that std::fstream is a type alias for basic_fstream like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace std {\ntypedef basic_fstream<char> fstream;\n}\n")),(0,a.kt)("p",null,"Now look at ",(0,a.kt)("a",{parentName:"p",href:"/docs/cpp-14/io/fstream/class_basic_fstream"},"basic_fstream"),"."))}f.isMDXComponent=!0}}]);